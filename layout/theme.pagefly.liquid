{% comment %}
This file is auto-generated by PageFly. The content can be overridden when publish page in PageFly. Please do not update this file directly.
If you plan to remove PageFly, please see the guide in our help center first: https://help.pagefly.io/.
{% endcomment %}
<!doctype html>
<!--[if IE 9]> <html class="ie9 no-js" lang="{{ shop.locale }}"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--> <html class="no-js" lang="{{ shop.locale }}"> <!--<![endif]-->
<head>{% render 'pagefly-head' %}
{% unless page.url contains "pages" %}
   <script src="https://cdn.yottaa.com/rapid.min.js?key=pN_qV_vpkwrqBg"></script>
  <script>
    Yo.configure('https://qoe-1.yottaa.net/api/v1/configure.rapid.js?key=pN_qV_vpkwrqBg');
  </script>
{% endunless %}
 


<!-- Google Verification Tag - Start --><meta name="google-site-verification" content="gcOUi859ah2jy89H_MWGCMs3rX13tNVPoQyhZzpstOI" /><!-- Google Verification Tag - End -->
  
  <!-- Global site tag (gtag.js) - Google Ads: 1035728037 -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-1035728037"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-1035728037');
</script>

  
  <!-- Affirm -->
  <script>
  _affirm_config = {
    public_api_key:  "65VBYSXXNDVQ5T61",
    script:          "https://cdn1.affirm.com/js/v2/affirm.js"
  };
  (function(l,g,m,e,a,f,b){var d,c=l[m]||{},h=document.createElement(f),n=document.getElementsByTagName(f)[0],k=function(a,b,c){return function(){a[b]._.push([c,arguments])}};c[e]=k(c,e,"set");d=c[e];c[a]={};c[a]._=[];d._=[];c[a][b]=k(c,a,b);a=0;for(b="set add save post open empty reset on off trigger ready setProduct".split(" ");a<b.length;a++)d[b[a]]=k(c,e,b[a]);a=0;for(b=["get","token","url","items"];a<b.length;a++)d[b[a]]=function(){};h.async=!0;h.src=g[f];n.parentNode.insertBefore(h,n);delete g[f];d(g);l[m]=c})(window,_affirm_config,"affirm","checkout","ui","script","ready");
  // Use your live public API Key and https://cdn1.affirm.com/js/v2/affirm.js script to point to Affirm production environment.
  </script>
  <!-- End Affirm -->
      
  {% comment %}{{ 'shopstorm-apps.scss.css' | asset_url | stylesheet_tag }}
  {% include 'shopstorm-scripttags' %}{% endcomment %}

  
  {% include 'script-bing-tracking' %}

  {% if settings.inspectlet != blank and settings.inspectlet == true %}
    <!-- Begin Inspectlet Asynchronous Code -->
    <script type="text/javascript">
    (function() {
    window.__insp = window.__insp || [];
    __insp.push(['wid', 1451826498]);
    var ldinsp = function(){
    if(typeof window.__inspld != "undefined") return; window.__inspld = 1; var insp = document.createElement('script'); insp.type = 'text/javascript'; insp.async = true; insp.id = "inspsync"; insp.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://cdn.inspectlet.com/inspectlet.js?wid=1451826498&r=' + Math.floor(new Date().getTime()/3600000); var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(insp, x); };
    setTimeout(ldinsp, 0);
    })();
    </script>
    <!-- End Inspectlet Asynchronous Code -->
  {% endif %}  


  
  <script>
    var theme = {
      strings: {
        addToCart: {{ 'products.product.add_to_cart' | t | json }},
        soldOut: {{ 'products.product.sold_out' | t | json }},
        unavailable: {{ 'products.product.unavailable' | t | json }},
        showMore: {{ 'general.filters.show_more' | t | json }},
        showLess: {{ 'general.filters.show_less' | t | json }},
        addressError: {{ 'sections.map.address_error' | t | json }},
        addressNoResults: {{ 'sections.map.address_no_results' | t | json }},
        addressQueryLimit: {{ 'sections.map.address_query_limit_html' | t | json }},
        authError: {{ 'sections.map.auth_error_html' | t | json }}
      },
      moneyFormat: {{ shop.money_format | json }}
    }

    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
  </script>

  <!--[if (lte IE 9) ]>{{ 'match-media.min.js' | asset_url | script_tag }}<![endif]-->

  {% if template.directory == 'customers' %}
    <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>
  {% endif %}

  <script src="{{ 'lazysizes.js' | asset_url }}"></script>
  <script src="{{ 'vendor.js' | asset_url }}"></script>
  <script src="{{ 'theme.js' | asset_url }}"></script>
  <script src="{{ 'custom.js' | asset_url }}"></script>
  {{ 'api.jquery.js' | shopify_asset_url | script_tag }}

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.color_button }}">
  <link rel="canonical" href="{{ canonical_url }}">
	{% if page.title == 'google_advert' %}
			<meta name="robots" content="noindex">
		{% endif %}
  {% if settings.favicon != blank %}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
  {% endif %}

  {% capture seo_title %}
    {{ page_title }}
    {% if current_tags %}
      {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
    {% endif %}
    {% if current_page != 1 %}
      &ndash; {{ 'general.meta.page' | t: page: current_page }}
    {% endif %}
    {% unless page_title contains shop.name %}
      &ndash; {{ shop.name }}
    {% endunless %}
  {% endcapture %}
  <title>{{ seo_title }}</title>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}">
  {% endif %}

  {% include 'social-meta-tags' %}

  {{ 'theme.scss.css' | asset_url | stylesheet_tag }}
  {% comment %}{% include 'google-fonts' %}{% endcomment %}

  {{ content_for_header }}
{% render 'globo.alsobought.script' %}

  {% include "loyaltylion" %}
  
  <script src="https://shopoe.net/app.js"></script>
  {% render 'judgeme_core' %}
{% include 'grss-json-ld' %}

{% render 'gsf-conversion-pixels' %}

<script>(() => {const installerKey = 'docapp-discount-auto-install'; const urlParams = new URLSearchParams(window.location.search); if (urlParams.get(installerKey)) {window.sessionStorage.setItem(installerKey, JSON.stringify({integrationId: urlParams.get('docapp-integration-id'), divClass: urlParams.get('docapp-install-class'), check: urlParams.get('docapp-check')}));}})();</script>

<script>(() => {const previewKey = 'docapp-discount-test'; const urlParams = new URLSearchParams(window.location.search); if (urlParams.get(previewKey)) {window.sessionStorage.setItem(previewKey, JSON.stringify({active: true, integrationId: urlParams.get('docapp-discount-inst-test')}));}})();</script>
<!-- Start of freshtrends Zendesk Widget script -->
<script id="ze-snippet" src="https://static.zdassets.com/ekr/snippet.js?key=b24ac5f7-1118-4553-9b1a-e2c0f85db6d9"> </script>
<!-- End of freshtrends Zendesk Widget script -->
<!-- GSSTART Show variants. Do not change -->
{% if request.path contains "/products/" %}{% else %}{% endif %}
<!-- Show variants code end. Do not change GSEND --></head>
<body class="template-{{ template | split: '.' | first }}"><div class="pagefly-container">{{ content_for_layout }}</div></body>
</html>

  
  {% if template != 'product' %}
  <style>
    span.jdgm-prev-badge__text {
    display: none;
}
  </style>
{% endif %}
  
{% if template contains "product" %}
    <script>
      var jsonldScript = document.createElement('script');
      jsonldScript.setAttribute('type', 'application/ld+json');
      var structuredData = {
        "@context": "https://schema.org/",
        "@type": "Product",
        "@id": {{ canonical_url | append: '#product' | json }},
        "review": []
      };

      var widget = document.createElement("div");
      widget.innerHTML = `{{ product.metafields.judgeme.widget }}`;
      widget.querySelectorAll(".jdgm-rev").forEach(review => {
        var date = review.querySelector(".jdgm-rev__timestamp").getAttribute("data-content");
        var body = review.querySelector(".jdgm-rev__body").innerHTML.replace(/\n|<.*?>/g,'');
        var rating = review.querySelector(".jdgm-rev__rating").getAttribute("data-score");
        var authorName = review.querySelector(".jdgm-rev__author").innerText;
        var title = review.querySelector(".jdgm-rev__title").innerText;
      
        structuredData.review.push({
          "@type": "Review",
          "datePublished": date,
          "name": title,
          "reviewBody": body,
          "reviewRating": {
            "@type": "Rating",
            "ratingValue": rating,
            "bestRating": "5",
            "worstRating": "1"
          }, 
          "author": {
            "@type": "Person",
            "name": authorName
          }
        });
      });

      jsonldScript.textContent = JSON.stringify(structuredData);
      document.head.appendChild(jsonldScript);
    </script>
{% endif %}